{"version":3,"file":"blocks/container-block/index.js","mappings":"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CA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,E;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,4G;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://wagepoint/./src/blocks/container-block/edit.js","webpack://wagepoint/./src/blocks/container-block/index.js","webpack://wagepoint/./src/blocks/container-block/save.js","webpack://wagepoint/./src/blocks/container-block/style.scss?7437","webpack://wagepoint/./src/color-system.js","webpack://wagepoint/./src/components/CustomColorSelect.js","webpack://wagepoint/external window [\"wp\",\"blockEditor\"]","webpack://wagepoint/external window [\"wp\",\"blocks\"]","webpack://wagepoint/external window [\"wp\",\"components\"]","webpack://wagepoint/external window [\"wp\",\"i18n\"]","webpack://wagepoint/external window \"React\"","webpack://wagepoint/webpack/bootstrap","webpack://wagepoint/webpack/runtime/chunk loaded","webpack://wagepoint/webpack/runtime/compat get default export","webpack://wagepoint/webpack/runtime/define property getters","webpack://wagepoint/webpack/runtime/hasOwnProperty shorthand","webpack://wagepoint/webpack/runtime/make namespace object","webpack://wagepoint/webpack/runtime/jsonp chunk loading","webpack://wagepoint/webpack/before-startup","webpack://wagepoint/webpack/startup","webpack://wagepoint/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport { \n    useBlockProps, \n    InnerBlocks,\n    InspectorControls\n} from '@wordpress/block-editor';\nimport { \n    PanelBody,\n    SelectControl\n} from '@wordpress/components';\nimport CustomColorSelect from '../../components/CustomColorSelect';\nimport { COLOR_SYSTEM, getAutoTextColor } from '../../color-system';\n\nconst SPACING_OPTIONS = [\n    { label: 'Auto', value: \"auto\" },\n    { label: 'Small', value: 'sm' },\n    { label: 'Medium', value: 'md' },\n    { label: 'Large', value: 'lg' }\n];\n\nexport default function Edit({ attributes, setAttributes }) {\n    const { containerBackground, verticalSpacing, topSpacing, bottomSpacing } = attributes;\n\n    const onBackgroundChange = (newBackground) => {\n        setAttributes({ containerBackground: newBackground });\n    };\n\n    const onTopSpacingChange = (newSpacing) => {\n        setAttributes({ topSpacing: newSpacing });\n    };\n\n    const onBottomSpacingChange = (newSpacing) => {\n        setAttributes({ bottomSpacing: newSpacing });\n    };\n\n    const getBlockClass = () => { \n        return [\n            \"container\",\n            topSpacing !==\"auto\" ? `top-${topSpacing}` : \"\",\n            bottomSpacing !==\"auto\" ? `bottom-${bottomSpacing}` : \"\"\n        ].join(\" \");\n    }\n\n    const containerStyles = {\n        backgroundColor: COLOR_SYSTEM.backgrounds[containerBackground]?.value || 'transparent'\n    };\n\n    const blockProps = useBlockProps({\n        className: getBlockClass()\n    });\n\n    return (\n        <>\n            <InspectorControls>\n                <PanelBody title={__('Container Settings', 'custom-blocks')}>\n                    <CustomColorSelect\n                        label={__('Background Color', 'custom-blocks')}\n                        value={containerBackground}\n                        onChange={onBackgroundChange}\n                        colors={COLOR_SYSTEM.backgrounds}\n                    />\n\n                    <SelectControl \n                        label={__('Top Spacing', 'custom-blocks')}\n                        value={topSpacing}\n                        onChange={onTopSpacingChange}\n                        options={SPACING_OPTIONS}\n                    />\n\n                    <SelectControl \n                        label={__('Bottom Spacing', 'custom-blocks')}\n                        value={bottomSpacing}\n                        onChange={onBottomSpacingChange}\n                        options={SPACING_OPTIONS}\n                    />\n\n                </PanelBody>\n            </InspectorControls>\n\n            <div {...blockProps}>\n                <div className=\"container__content\" style={containerStyles}>\n                    <InnerBlocks />\n                </div>\n            </div>\n        </>\n    );\n}","import { registerBlockType } from '@wordpress/blocks';\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\nimport './style.scss';\n\nregisterBlockType(metadata.name, {\n    edit: Edit,\n    save,\n});","import { useBlockProps, InnerBlocks } from '@wordpress/block-editor';\nimport { COLOR_SYSTEM } from '../../color-system';\n\nconst SPACING_OPTIONS = [\n    { label: 'Auto', value: \"auto\" },\n    { label: 'Small', value: 'sm' },\n    { label: 'Medium', value: 'md' },\n    { label: 'Large', value: 'lg' }\n];\n\nexport default function save({ attributes }) {\n    const { containerBackground, topSpacing, bottomSpacing } = attributes;\n\n    const getBlockClass = () => { \n        return [\n            \"container\",\n            topSpacing !==\"auto\" ? `top-${topSpacing}` : \"\",\n            bottomSpacing !==\"auto\" ? `bottom-${bottomSpacing}` : \"\"\n        ].join(\" \");\n    }\n    \n    const blockProps = useBlockProps.save({\n        className: getBlockClass()\n    });\n\n    const containerStyles = {\n        backgroundColor: COLOR_SYSTEM.backgrounds[containerBackground]?.value || 'transparent'\n    };\n\n    return (\n        <div {...blockProps}>\n            <div className=\"container__content\" style={containerStyles}>\n                <InnerBlocks.Content />\n            </div>\n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nexport {};","// Define your color system\nexport const COLOR_SYSTEM = {\n    backgrounds: {\n        'transparent': {\n            value: 'transparent',\n            label: 'Transparent',\n            autoText: '#1a1a1a' // Dark text on transparent\n        },\n        'white': {\n            value: '#ffffff',\n            label: 'White',\n            autoText: '#1a1a1a'\n        },\n        'blue': {\n            value: '#3b82f6',\n            label: 'Blue',\n            autoText: '#ffffff'\n        },\n        'dark-blue': {\n            value: '#1e3a8a',\n            label: 'Dark Blue',\n            autoText: '#ffffff'\n        },\n        'gray': {\n            value: '#6b7280',\n            label: 'Gray',\n            autoText: '#ffffff'\n        }\n    },\n    textColors: {\n        'auto': {\n            value: 'auto',\n            label: 'Auto'\n        },\n        'white': {\n            value: '#ffffff',\n            label: 'White'\n        },\n        'black': {\n            value: '#1a1a1a',\n            label: 'Black'\n        },\n        'blue': {\n            value: '#3b82f6',\n            label: 'Blue'\n        },\n        'yellow': {\n            value: '#fbbf24',\n            label: 'Yellow'\n        }\n    }\n};\n\n// Helper function to get auto text color for a background\nexport function getAutoTextColor(backgroundKey) {\n    const bgConfig = COLOR_SYSTEM.backgrounds[backgroundKey];\n    return bgConfig ? bgConfig.autoText : '#1a1a1a';\n}","// Custom Color Select Component\nimport { BaseControl, Button, Dropdown, ColorIndicator } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nfunction CustomColorSelect({ \n    label, \n    value, \n    onChange, \n    colors, \n    showAutoOption = false,\n    autoColor = '#1a1a1a' \n}) {\n    const getCurrentColor = () => {\n        if (value === 'auto' && showAutoOption) {\n            return autoColor;\n        }\n        return colors[value]?.value || '#000000';\n    };\n\n    const getCurrentLabel = () => {\n        if (value === 'auto' && showAutoOption) {\n            return 'Auto';\n        }\n        return colors[value]?.label || 'Unknown';\n    };\n\n    return (\n        <BaseControl label={label}>\n            <Dropdown\n                renderToggle={({ isOpen, onToggle }) => (\n                    <Button\n                        onClick={onToggle}\n                        aria-expanded={isOpen}\n                        style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '8px',\n                            padding: '8px 12px',\n                            border: '1px solid #949494',\n                            borderRadius: '2px',\n                            backgroundColor: 'white',\n                            width: '100%',\n                            justifyContent: 'flex-start'\n                        }}\n                    >\n                        <ColorIndicator colorValue={getCurrentColor()} />\n                        {getCurrentLabel()}\n                    </Button>\n                )}\n                renderContent={() => (\n                    <div style={{ \n                        padding: '8px',\n                        minWidth: '200px',\n                        backgroundColor: 'white',\n                        border: '1px solid #ccc',\n                        borderRadius: '2px',\n                        boxShadow: '0 2px 6px rgba(0,0,0,0.1)'\n                    }}>\n                        {Object.entries(colors).map(([key, config]) => (\n                            <Button\n                                key={key}\n                                onClick={() => onChange(key)}\n                                style={{\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: '8px',\n                                    padding: '8px',\n                                    width: '100%',\n                                    border: 'none',\n                                    backgroundColor: value === key ? '#f0f0f0' : 'transparent',\n                                    textAlign: 'left',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                <ColorIndicator colorValue={config.value} />\n                                {config.label}\n                            </Button>\n                        ))}\n                    </div>\n                )}\n            />\n        </BaseControl>\n    );\n}\n\nexport default CustomColorSelect;","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"React\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/container-block/index\": 0,\n\t\"blocks/container-block/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkwagepoint\"] = globalThis[\"webpackChunkwagepoint\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/container-block/style-index\"], () => (__webpack_require__(\"./src/blocks/container-block/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InnerBlocks","InspectorControls","PanelBody","SelectControl","CustomColorSelect","COLOR_SYSTEM","getAutoTextColor","SPACING_OPTIONS","label","value","Edit","attributes","setAttributes","containerBackground","verticalSpacing","topSpacing","bottomSpacing","onBackgroundChange","newBackground","onTopSpacingChange","newSpacing","onBottomSpacingChange","getBlockClass","join","containerStyles","backgroundColor","backgrounds","blockProps","className","createElement","Fragment","title","onChange","colors","options","style","registerBlockType","save","metadata","name","edit","Content","autoText","textColors","backgroundKey","bgConfig","BaseControl","Button","Dropdown","ColorIndicator","showAutoOption","autoColor","getCurrentColor","getCurrentLabel","renderToggle","isOpen","onToggle","onClick","display","alignItems","gap","padding","border","borderRadius","width","justifyContent","colorValue","renderContent","minWidth","boxShadow","Object","entries","map","key","config","textAlign","cursor"],"sourceRoot":""}